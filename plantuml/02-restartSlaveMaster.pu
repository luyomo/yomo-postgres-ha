title Restart by the sequence (slave -> master)
actor caller
activate NODE01
activate NODE02
== Initialize the cluster status ==
caller -> NODE01 : 01. Call function to stop two nodes
activate NODE01 #Gray
NODE01 -> NODE02 : 01. Call function to stop two nodes
activate NODE02 #Gray
caller -> NODE01 : 02. start node01 as the master
deactivate NODE01
NODE01->NODE01 : Change state
activate NODE01 #DarkSalmon
NODE01 -> NODE02 : 02. start node02 as the slave
deactivate NODE01
deactivate NODE02
NODE01 <-[#red]-> NODE02 : Change state
activate NODE01 #Red
activate NODE02 #Blue
caller -> NODE01 : 05  Insert test data
== stop the cluster status ==
group restart
  caller -> NODE02 : 11. stop node02(Slave) first
  deactivate NODE01
  deactivate NODE02
  NODE01 <-[#red]-> NODE02 : Change state
  activate NODE02 #Gray
  activate NODE01 #DarkSalmon
  caller -> NODE01 : 12. Insert data to single
  caller -> NODE01 : 13. stop node01(master) second
  deactivate NODE01
  NODE01 -> NODE01 : change state
  activate NODE01 #Gray
end

== restart the cluster status ==
deactivate NODE01
caller -> NODE01 : 21. start node01 as master first
activate NODE01 #DarkSalmon
caller -> NODE01 : 22. Insert test data
deactivate NODE02
caller -> NODE02 : 23. start node02 as slave second
deactivate NODE01
deactivate NODE02
NODE01 <-[#red]-> NODE02 : Change state
activate NODE01 #Red
activate NODE02 #Blue

caller -> NODE01 : 24. stop node01(master first)
NODE01 -> NODE02 : 24. stop node02(slave second)
deactivate NODE01
deactivate NODE02

note over NODE01, NODE02
Gray : inactive
DarkSalmon : Single
Red : master
Blue : slave
Green : in-recovery
end note