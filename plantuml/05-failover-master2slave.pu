title Failover by restart
actor caller
activate NODE01
activate NODE02
== Initialize the cluster status ==
caller -> NODE01 : 01. Call function to stop two nodes
activate NODE01 #Gray
NODE01 -> NODE02 : 01. Call function to stop two nodes
activate NODE02 #Gray
caller -> NODE01 : 02. start node01 as the master
deactivate NODE01
NODE01->NODE01 : Change state
activate NODE01 #DarkSalmon
caller -> NODE01 : 03. Insert test data
caller -> NODE02 : 04. start node02 as the slave
deactivate NODE01
deactivate NODE02
NODE01 <-[#red]-> NODE02 : Change state
activate NODE01 #Red
activate NODE02 #Blue
caller -> NODE01 : 05  Insert test data
== Failover the slave ==
group restart
  caller -> NODE01 : 11. stop node01 first
  deactivate NODE01
  deactivate NODE02
  NODE01 <-[#red]-> NODE02 : Change stat
  activate NODE01 #Gray
  activate NODE02 #Green
  caller -> NODE02 : 12. failover by restart
  deactivate NODE02
  NODE02 -> NODE02 : change state
  activate NODE02 #DarkSalmon
end

== restart the cluster status ==
deactivate NODE01
deactivate NODE02
caller -> NODE01 : 21. start node01 as slave
activate NODE01 #Blue
activate NODE02 #Red
caller -> NODE02 : 22. Insert test data

caller -> NODE01 : 23. stop node01 as slave first
NODE01 -> NODE02 : 23. stop node02 as master second
deactivate NODE01
deactivate NODE02

note over NODE01, NODE02
Gray : inactive
DarkSalmon : Single
Red : master
Blue : slave
Green : in-recovery
end note